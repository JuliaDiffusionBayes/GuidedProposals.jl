var documenterSearchIndex = {"docs":
[{"location":"#GuidedProposals.jl-1","page":"Home","title":"GuidedProposals.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"test documentation","category":"page"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [GuidedProposals]","category":"page"},{"location":"#GuidedProposals.GuidProp","page":"Home","title":"GuidedProposals.GuidProp","text":"GuidProp{R,R2,O,C,SM,SH,SP}\n\nStruct defining guided proposals of M Schauer, F van der Meulen and H van Zanten. See Mider M, Schauer M and van der Meulen F Continuous-discrete smoothing of diffusions (2020) for a comprehensive overview of the mathematics behind this object. It computes and stores the guiding term ∇logρ and allows for simulation of guided proposals and computation of their likelihood.\n\n    GuidProp(\n        tt,\n        P_target::R,\n        P_aux::R2,\n        obs::O,\n        solver_choice=(\n            solver=:Tsit5,\n            ode_type=:HFc,\n            convert_to_HFc=false,\n            inplace=false,\n            save_as_type=nothing,\n            ode_data_type=nothing,\n        ),\n        next_guiding_term=nothing\n    ) where {R,R2,O}\n\nDefault constructor. `P_target` and `P_aux` are the target and auxiliary\ndiffusion laws respectively. `tt` is the time-grid on which `∇logρ` needs\nto be computed. `obs` is the terminal observation (and the only one on the\ninterval (`tt[1]`, `tt[end]`]). `solver_choice` specifies the type of ODE\nsolver that is to be used for computations of `∇logρ` (it is a `NamedTuple`,\nwith `solver` specifying the ODE solver, `ode_type` picking the ODE system\n(between :HFc, :MLμ and :Pν), `convert_to_HFc` indicating whether to\ntranslate the results of M,L,μ solver to H,F,c objects, `inplace` is a flag\nfor whether to use in-place ODE solvers (for which B!, β!, σ! and a!\nfunctions need to be defined for the auxiliary diffusion), `save_as_type`\nspecifies the datatypes in which the terms computed for `∇logρ` are to be\nsaved and `ode_data_type` specifies the data type used for internal\ncomputations of ODE solvers). Finally, `next_guiding_term` is the guided\nproposal for the subsequent inter-observation interval.\n\n\n\n\n\n","category":"type"},{"location":"#GuidedProposals.HFcSolver","page":"Home","title":"GuidedProposals.HFcSolver","text":"struct HFcSolver{Tp,Tcb,T}\n\nStruct for solving a (H,F,c)-system of ODEs.\n\n    HFcSolver(\n        ::Val{:inplace},\n        tt,\n        xT_plus,\n        P,\n        solver_type,\n        save_as_type,\n    )\nConstructor for an ODE solver with in-place operations. Pre-allocates space\nand solves once a (H,F,c)-system of ODEs backward in time on the interval\n`(tt[1], tt[end])`, with a terminal condition computed from `xT_plus`. `P`\nis the auxiliary diffusion, and `solver_type` indicates the algorithm for\nsolving ODEs. `save_as_type` gives datatypes that H,F,c are to be saved as\nand `tt` gives a grid of time-points at which they need to be saved.\n\n    HFcSolver(\n        ::Val{:outofplace},\n        tt,\n        xT_plus,\n        P,\n        solver_type,\n        save_as_type,\n    )\nConstructor for an ODE solver with out-of-place operations.\nNOTE: currently not implemented\n\n\n\n\n\n","category":"type"},{"location":"#GuidedProposals.HFc0-Tuple{GuidedProposals.HFcSolver}","page":"Home","title":"GuidedProposals.HFc0","text":"HFc0(s::HFcSolver)\n\nReturn the data containing H,F,c terms for the time 0+\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._F-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._F","text":"_F(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a vector F that are stored in a container data\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._H-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._H","text":"_H(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a matrix H that are stored in a container data\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._L-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._L","text":"_L(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a matrix L that are stored in a container data\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._M-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._M","text":"_M(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a matrix M that are stored in a container data\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._P-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._P","text":"_P(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a matrix P that are stored in a container data\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._c-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._c","text":"_c(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a scalar c that is stored in a container data\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._temp_matH-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._temp_matH","text":"_temp_matH(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a temporary matrix, stored in a container data.\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._temp_vecH-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._temp_vecH","text":"_temp_vecH(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a temporary vector, stored in a container data.\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._μ-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._μ","text":"_μ(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a vector μ that are stored in a container data\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals._ν-Union{Tuple{T}, Tuple{AbstractArray,Val{T}}} where T","page":"Home","title":"GuidedProposals._ν","text":"_ν(data::AbstractArray, ::Val{T}) where T\n\nProvide a view to contents of a vector ν that are stored in a container data\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals.init_hfc-Tuple{Val{false},Vararg{Any,N} where N}","page":"Home","title":"GuidedProposals.init_hfc","text":"init_hfc(::Val{false}, ...)\n\nNothing to initialise if a flag for HFc solver is turned off\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals.init_hfc-Tuple{Val{true},Any,Any,Any,Any,Any}","page":"Home","title":"GuidedProposals.init_hfc","text":"init_hfc(::Val{true}, tt, P_aux, obs, choice, next_guiding_term)\n\nInitialise ODE solver for H,F,c, preallocate space and solve it once. tt is the time-grid on which ∇logρ is to be saved. P_aux is the auxiliary law, obs is the terminal observation, choice is the NamedTuple with various choices for the the ODE solver (here, the ones used are: solver–-the type of ODE solver, inplace–-whether to perform computations in-place, save_as_type–-the datatypes in which H,F,c are to be solved (if set to nothing, then Matrix{Float64}, Vector{Float64} and Float64 are used by default for storing H, F and c respectively), ode_data_type–-the datatypes in which the ODE solvers should store all the data (if set to nothing, then Vector{Float64} is used by default)). Finally, next_guiding_term is the guided proposal used on the subsequent inter-observation interval.\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals.init_solvers-Tuple{Any}","page":"Home","title":"GuidedProposals.init_solvers","text":"init_solvers(params)\n\nInitialise appropriate ODE solvers, according to how they are specified in params. Validity of the format of params is not checked, because it is only ever called by hard-coded constructor of GuidProp.\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals.outer-Tuple{Any}","page":"Home","title":"GuidedProposals.outer","text":"outer(x)\n\nCompute an outer product\n\n\n\n\n\n","category":"method"},{"location":"#GuidedProposals.update_HFc!-NTuple{4,Any}","page":"Home","title":"GuidedProposals.update_HFc!","text":"update_HFc!(u_T, u_Tplus, obs, access)\n\nUpdate equations for H,F,c at the times of observations.\n\n\n\n\n\n","category":"method"}]
}
